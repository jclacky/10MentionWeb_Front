/* 
    Une page HTML standard sans style déclaré bénéficiera néanmoins d'un ensemble de styles automatiquement appliqués par le navigateur, permettant ainsi de distinguer les différents éléments. 
    Afin d'initialiser ces valeurs, on a la possibilité de les annuler dans le CSS en sélectionnant chaque élément et en modifiant ses propriétés.
    Une autre approche consiste à utiliser le reset CSS : https://meyerweb.com/eric/tools/css/reset/
    ou le mini reset : https://jgthms.com/minireset.css/

    
*/
@import url(normalize.css);
/* *************************  Responsive Web Designe  ********************************** */
 /* 
    Le Responsive Web Design englobe les techniques de conception de contenus internet qui permettent de proposer des contenus auto-adaptables en fonction des interfaces de consultation utilisées par le visiteur

    Sans le cadre du Responsive Web Design, on parle de deux caractéristiques imprtantes: 

    - L'ajustement automatique de la taille des éléments :  une page web, un élément HTML ou une image peut ainsi se redimensionner en fonction de la taille d'écran du terminal utiloisé (ordinateur, tablette, smartphone, etc...)
    -L'adaptation de l'agencement des  éléments: l'organisation du contenu peut être également automatiquement adapteé

    
    Le Responsive Web Design est aujourd'hui un incontournable dans le monde du développement web.
*/
:root {
  font-size: 62.5%;
}
*{
  box-sizing: border-box;
}
body{
  font-weight: bold;
}
.container{
  width: 90%;
  margin: 0 auto;
}
h1{
  text-align: center;
  margin: 50px 0;
}
h2{
  font-size: 2.5rem;
  margin: 2rem;
}
.responsive :nth-child(2) {
  background-color: #ffc0d9;
}

.responsive :nth-child(3) {
  background-color: #d63484;
}

.responsive :nth-child(4) {
  background-color: #ff90bc;
}
.responsive {
  display: flex;
  flex-wrap: wrap;
}

.responsive h2{
  width: 100%;
}
.responsive div{
  width: 33.33%;
  line-height: 100px;
  text-align: center;
  font-size: 2rem;
}
@media screen and (min-width:768px) and (max-width:1200px) {
  .responsive :nth-child(2), .responsive :nth-child(3) {
      width: 50%;
  }

  .responsive :nth-child(4) {
      width: 100%;
  }
}

@media screen and (max-width:768px) {
  .responsive div {
      width: 100%;
  }
}
/* **************************** Site adaptatif ************************************ */

/* Grâce au design adaptatif, l'utilisateur peut consulter le même site web avec un confort visuel équivalent, sans avoir à zoomer, défiler horizontalement, ou effectuer d'autres manipulations susceptibles de dégrader l'expérience utilisateur. C'est précisément pour cette raison que cette technique offre de très bonnes performances. */

.adaptative {
  border: 2px solid black;
  height: 500px;
  padding: 1.5rem;
  margin-bottom: 50px;
}
@media screen and (max-width:991.99px) {
  .adaptative h2{
    font-size: 1.5rem;
  }
  .adaptative p{
    font-size: 1.3rem;
  }
  
}
@media screen and (min-width:992px) and (max-width:11) {
  .adaptative h2{
    font-size: 1.5rem;
  }
  .adaptative p{
    font-size: 1.3rem;
  }
  
}
@media screen and (min-width:991.99px) {
  .adaptative h2{
    font-size: 2.5rem;
  }
  .adaptative p{
    font-size: 2rem;
  }
  
}
/* ****************************************Design fluid********************************** */
/* **************************** Design fluide ************************************ */
/* 
    Le design fluide est une technique où le site s'adapte automatiquement à la résolution de l'utilisateur. Pour cela, il suffit que tous vos blocs et éléments soient dimensionnés en unités fluides.
*/
.fluid {
  border: 2px solid black;
  display: flex;
  flex-wrap: wrap;
  margin: 0 0 60px 0;
  padding: 30px;
  justify-content: center;
}
.fluid h2{
  width: 100%;
}
.fluid :nth-child(2){
  width: 60%;
  background-color: #f1b4bb;
  padding:20px;
}
.fluid :nth-child(3){
  width: 40%;
  background-color: #facbea;
  padding:20px;
}
@media screen and (max-width:626px) {
  .fluid img, .fluid div{
    width: 100% !important;
    
  }
}